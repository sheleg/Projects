
import java.awt.Dimension;
import java.io.File;
import java.io.IOException;
import javax.swing.JFileChooser;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author vladasheleg
 */
public class MemberFrame extends javax.swing.JFrame {

    String Path;
    /**
     * Creates new form MemberFrame
     */
    public MemberFrame() {
        initComponents();
    }
    
    private void Info(String s) {
        InfoLabel.setText(s);
    }
    
    private void MBInfo(String s) {
        javax.swing.JOptionPane.showMessageDialog(this, s);
    }

    private void Print(String s) {
        MainTextArea.setText(s);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addMemberDialog = new javax.swing.JDialog();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        tfSectionCode = new javax.swing.JTextField();
        tfName = new javax.swing.JTextField();
        tfTypeOfActivities = new javax.swing.JTextField();
        tfTrainer = new javax.swing.JTextField();
        tfStartTime = new javax.swing.JTextField();
        tfDuration = new javax.swing.JTextField();
        tfPrice = new javax.swing.JTextField();
        addButton = new javax.swing.JButton();
        FileCooser = new javax.swing.JFileChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        MainTextArea = new javax.swing.JTextArea();
        CriteriumPanel = new javax.swing.JPanel();
        cbName = new javax.swing.JRadioButton();
        cbTrainer = new javax.swing.JRadioButton();
        cbSTime = new javax.swing.JRadioButton();
        tfKey = new javax.swing.JTextField();
        lKey_ = new javax.swing.JLabel();
        InfoLabel = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        MenuFile = new javax.swing.JMenu();
        miOpenFiles = new javax.swing.JMenuItem();
        MenuCommand = new javax.swing.JMenu();
        miAppend = new javax.swing.JMenuItem();
        miPrint = new javax.swing.JMenuItem();
        miPrintSorted = new javax.swing.JMenuItem();
        miPrintRevSorted = new javax.swing.JMenuItem();
        MenuFind = new javax.swing.JMenu();
        miSmaller = new javax.swing.JMenuItem();
        miEquals = new javax.swing.JMenuItem();
        miLarger = new javax.swing.JMenuItem();
        miDelete = new javax.swing.JMenuItem();
        MenuHelp = new javax.swing.JMenu();

        addMemberDialog.setName("addMemberDialog"); // NOI18N

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Name");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Section code");

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Type of activities");

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Trainer");

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Start time(yyyy-mm-dd)");

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Duration");

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Price");

        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addMemberDialogLayout = new javax.swing.GroupLayout(addMemberDialog.getContentPane());
        addMemberDialog.getContentPane().setLayout(addMemberDialogLayout);
        addMemberDialogLayout.setHorizontalGroup(
            addMemberDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addMemberDialogLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(addMemberDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(addMemberDialogLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addMemberDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfName, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                    .addComponent(tfSectionCode)
                    .addComponent(tfTypeOfActivities, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                    .addComponent(tfTrainer, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                    .addComponent(tfStartTime, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                    .addComponent(tfDuration, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                    .addComponent(tfPrice, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addMemberDialogLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addButton)
                .addGap(14, 14, 14))
        );
        addMemberDialogLayout.setVerticalGroup(
            addMemberDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addMemberDialogLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(addMemberDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addMemberDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tfSectionCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addMemberDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(tfTypeOfActivities, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addMemberDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(tfTrainer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addMemberDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(tfStartTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addMemberDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(tfDuration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addMemberDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(tfPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addButton)
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        MainTextArea.setEditable(false);
        MainTextArea.setColumns(20);
        MainTextArea.setRows(5);
        MainTextArea.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                MainTextAreaMouseEntered(evt);
            }
        });
        jScrollPane1.setViewportView(MainTextArea);

        CriteriumPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                CriteriumPanelMouseEntered(evt);
            }
        });

        cbName.setSelected(true);
        cbName.setText("Name");
        cbName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbNameActionPerformed(evt);
            }
        });

        cbTrainer.setText("Trainer");
        cbTrainer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTrainerActionPerformed(evt);
            }
        });

        cbSTime.setText("Start time");
        cbSTime.setToolTipText("");
        cbSTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSTimeActionPerformed(evt);
            }
        });

        tfKey.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tfKeyMouseEntered(evt);
            }
        });

        lKey_.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        lKey_.setText("Key:");

        javax.swing.GroupLayout CriteriumPanelLayout = new javax.swing.GroupLayout(CriteriumPanel);
        CriteriumPanel.setLayout(CriteriumPanelLayout);
        CriteriumPanelLayout.setHorizontalGroup(
            CriteriumPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CriteriumPanelLayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(lKey_)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CriteriumPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbSTime)
                    .addComponent(cbTrainer)
                    .addComponent(cbName)
                    .addComponent(tfKey, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 3, Short.MAX_VALUE))
        );
        CriteriumPanelLayout.setVerticalGroup(
            CriteriumPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CriteriumPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CriteriumPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfKey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lKey_))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbTrainer, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbSTime)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        MenuFile.setText("File");
        MenuFile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                MenuFileMouseEntered(evt);
            }
        });

        miOpenFiles.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.META_MASK));
        miOpenFiles.setText("Open Info&Index Files...");
        miOpenFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miOpenFilesActionPerformed(evt);
            }
        });
        MenuFile.add(miOpenFiles);

        jMenuBar1.add(MenuFile);

        MenuCommand.setText("Command");
        MenuCommand.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                MenuCommandMouseEntered(evt);
            }
        });

        miAppend.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.META_MASK));
        miAppend.setText("Append");
        miAppend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miAppendActionPerformed(evt);
            }
        });
        MenuCommand.add(miAppend);

        miPrint.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.META_MASK));
        miPrint.setText("Print");
        miPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miPrintActionPerformed(evt);
            }
        });
        MenuCommand.add(miPrint);

        miPrintSorted.setText("Print sorted");
        miPrintSorted.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miPrintSortedActionPerformed(evt);
            }
        });
        MenuCommand.add(miPrintSorted);

        miPrintRevSorted.setText("Print rev. sorted");
        miPrintRevSorted.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miPrintRevSortedActionPerformed(evt);
            }
        });
        MenuCommand.add(miPrintRevSorted);

        MenuFind.setText("Find...");

        miSmaller.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.META_MASK));
        miSmaller.setText("Smaller");
        miSmaller.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miSmallerActionPerformed(evt);
            }
        });
        MenuFind.add(miSmaller);

        miEquals.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.META_MASK));
        miEquals.setText("Equals");
        miEquals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miEqualsActionPerformed(evt);
            }
        });
        MenuFind.add(miEquals);

        miLarger.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.META_MASK));
        miLarger.setText("Larger");
        miLarger.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miLargerActionPerformed(evt);
            }
        });
        MenuFind.add(miLarger);

        MenuCommand.add(MenuFind);

        miDelete.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.META_MASK));
        miDelete.setText("Delete by key");
        miDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miDeleteActionPerformed(evt);
            }
        });
        MenuCommand.add(miDelete);

        jMenuBar1.add(MenuCommand);

        MenuHelp.setText("Help");
        jMenuBar1.add(MenuHelp);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(InfoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 568, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CriteriumPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(CriteriumPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(InfoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 17, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbNameActionPerformed
        Main.SortParam = 1;       // TODO add your handling code here:
    }//GEN-LAST:event_cbNameActionPerformed

    private void cbTrainerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTrainerActionPerformed
        Main.SortParam = 2; // TODO add your handling code here:
    }//GEN-LAST:event_cbTrainerActionPerformed

    private void cbSTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSTimeActionPerformed
        Main.SortParam = 3;// TODO add your handling code here:
    }//GEN-LAST:event_cbSTimeActionPerformed

    private void tfKeyMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfKeyMouseEntered
        Info("Ключ поиска");        // TODO add your handling code here:
    }//GEN-LAST:event_tfKeyMouseEntered

    private void CriteriumPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CriteriumPanelMouseEntered
        Info("Критерии поиска и сортировки");        // TODO add your handling code here:
    }//GEN-LAST:event_CriteriumPanelMouseEntered

   
    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        int price = Integer.parseInt(tfPrice.getText());
        int duration = Integer.parseInt(tfDuration.getText());
        ComplexMember cmpMember = Main.createComplexMember(tfName.getText(), 
                tfSectionCode.getText(), tfTypeOfActivities.getText(), tfTrainer.getText(), 
                tfStartTime.getText(), duration, price);
        
        if (cmpMember == null)
        {
            MBInfo("Одно или несколько полей заполнены неправильно!\nПроверьте правильность введенный данных и повторите!");
        }
        else
        {
            try
            {
                Main.appendFile(cmpMember); 
                MBInfo("Данные успешно добавлены в новый файл!");
            }
            catch (IOException | ClassNotFoundException e)
            {
                MBInfo("Файл, который вы выбрали, не является информационным файлом для этой программы! \nПрограмма создала *_buf.dat для решения проблемы");
                Main.filename = Path + "_buf.dat";
                Main.filenameBak = Path + "_buf.~dat";
                Main.idxname = Path + "_buf.idx";
                Main.idxnameBak = Path + "_buf.~idx";
                try
                {
                    Main.appendFile(cmpMember);   
                    MBInfo("Данные успешно добавлены в новый файл!");
                }
                catch(IOException | ClassNotFoundException f)
                {
                    MBInfo("Ошибка!\nПроблема не может быть решена!");
                }
                
            }
        }
        
        addMemberDialog.setVisible(false);
        tfDuration.setText("");
        tfKey.setText("");
        tfName.setText("");
        tfPrice.setText("");
        tfSectionCode.setText("");
        tfStartTime.setText("");
        tfTrainer.setText("");
        tfTypeOfActivities.setText("");
    }//GEN-LAST:event_addButtonActionPerformed

    private void miOpenFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miOpenFilesActionPerformed
        int ret = FileCooser.showDialog(null, "Открыть файл");                
        if (ret == JFileChooser.APPROVE_OPTION) {
            File Data = FileCooser.getSelectedFile();
            String FileName = Data.getName();
            String DataPath = Data.getAbsolutePath();
            Path = DataPath.substring(0, DataPath.length() - 4);
            if (!FileName.substring(FileName.length() - 4).equals(".dat"))
            {
                
                Object[] options = {"Yes", "No",};
                int n = javax.swing.JOptionPane.showOptionDialog(this, "Файл не *.dat!\nСоздано " + FileName.substring(0, FileName.length() - 4) + ".dat?", "Error",
                javax.swing.JOptionPane.YES_NO_OPTION,
                javax.swing.JOptionPane.QUESTION_MESSAGE, null, options, options[1]);
                if (n == 0)
                {
                    Main.filename = Path + ".dat";
                    Main.filenameBak = Path + ".~dat";
                    Main.idxname = Path + ".idx";
                    Main.idxnameBak = Path + ".~idx";
                }
            }
                
            else
            {
                File Index = new File(Path + ".idx");
                if (!Index.exists())
                    Info("Ошибка загрузки файла индексов");
                else
                {
                    Main.filename = Path + ".dat";
                    Main.filenameBak = Path + ".~dat";
                    Main.idxname = Path + ".idx";
                    Main.idxnameBak = Path + ".~idx";                    
                }
           
            }
                
        }
    }//GEN-LAST:event_miOpenFilesActionPerformed

    private void miAppendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miAppendActionPerformed
        addMemberDialog.setMinimumSize(new Dimension(450, 370));
        addMemberDialog.setVisible(true);
    }//GEN-LAST:event_miAppendActionPerformed

    private void miPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miPrintActionPerformed
         try{
            Print(Main.printFile());
        }
        catch (IOException | ClassNotFoundException e)
        {
            MBInfo("Файл, который вы выбрали, не является информационным файлом для этой программы!");
        }
    }//GEN-LAST:event_miPrintActionPerformed

    private void miPrintSortedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miPrintSortedActionPerformed
        try{
            Print(Main.printFile(false));
        }
        catch (IOException | ClassNotFoundException e)
        {
            MBInfo("Файл, который вы выбрали, не является информационным файлом для этой программы!");
        }
    }//GEN-LAST:event_miPrintSortedActionPerformed

    private void miPrintRevSortedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miPrintRevSortedActionPerformed
        try{
            Print(Main.printFile(true));
        }
        catch (IOException | ClassNotFoundException e)
        {
            MBInfo("Файл, который вы выбрали, не является информационным файлом для этой программы!");
        }
    }//GEN-LAST:event_miPrintRevSortedActionPerformed

    private void miSmallerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miSmallerActionPerformed
        try{
            Print(Main.findByKey(tfKey.getText(), new KeyCompReverse()));  
        }
        catch (IOException | ClassNotFoundException e)
        {
            MBInfo("Файл, который вы выбрали, не является информационным файлом для этой программы!");
        }
    }//GEN-LAST:event_miSmallerActionPerformed

    private void miEqualsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miEqualsActionPerformed
        try{
            Print(Main.findByKey(tfKey.getText()));  
        }
        catch (IOException | ClassNotFoundException e)
        {
            MBInfo("Файл, который вы выбрали, не является информационным файлом для этой программы!");
        }
    }//GEN-LAST:event_miEqualsActionPerformed

    private void miLargerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miLargerActionPerformed
        try{
            Print(Main.findByKey(tfKey.getText(), new KeyComp()));  
        }
        catch (IOException | ClassNotFoundException e)
        {
            MBInfo("Файл, который вы выбрали, не является информационным файлом для этой программы!");
        }
    }//GEN-LAST:event_miLargerActionPerformed

    private void miDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miDeleteActionPerformed
        try{
            if (Main.deleteFile(tfKey.getText()))
                MBInfo("Удаление записей с ключом " + tfKey.getText() +" успешно завершено!");
            else
                MBInfo("Не найден ключ "+ tfKey.getText() + "!\nНечего удалять!");
        }
        catch (IOException | ClassNotFoundException e)
        {
            MBInfo("Нет файла для удаления!");
        } 
    }//GEN-LAST:event_miDeleteActionPerformed

    private void MainTextAreaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MainTextAreaMouseEntered
        Info("Поле вывода информации");
    }//GEN-LAST:event_MainTextAreaMouseEntered

    private void MenuCommandMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuCommandMouseEntered
        Info("Меню для работы с данными файла");
    }//GEN-LAST:event_MenuCommandMouseEntered

    private void MenuFileMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuFileMouseEntered
        Info("Меню для выбора файла");
    }//GEN-LAST:event_MenuFileMouseEntered

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MemberFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new MemberFrame().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel CriteriumPanel;
    private javax.swing.JFileChooser FileCooser;
    private javax.swing.JLabel InfoLabel;
    private javax.swing.JTextArea MainTextArea;
    private javax.swing.JMenu MenuCommand;
    private javax.swing.JMenu MenuFile;
    private javax.swing.JMenu MenuFind;
    private javax.swing.JMenu MenuHelp;
    private javax.swing.JButton addButton;
    private javax.swing.JDialog addMemberDialog;
    private javax.swing.JRadioButton cbName;
    private javax.swing.JRadioButton cbSTime;
    private javax.swing.JRadioButton cbTrainer;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lKey_;
    private javax.swing.JMenuItem miAppend;
    private javax.swing.JMenuItem miDelete;
    private javax.swing.JMenuItem miEquals;
    private javax.swing.JMenuItem miLarger;
    private javax.swing.JMenuItem miOpenFiles;
    private javax.swing.JMenuItem miPrint;
    private javax.swing.JMenuItem miPrintRevSorted;
    private javax.swing.JMenuItem miPrintSorted;
    private javax.swing.JMenuItem miSmaller;
    private javax.swing.JTextField tfDuration;
    private javax.swing.JTextField tfKey;
    private javax.swing.JTextField tfName;
    private javax.swing.JTextField tfPrice;
    private javax.swing.JTextField tfSectionCode;
    private javax.swing.JTextField tfStartTime;
    private javax.swing.JTextField tfTrainer;
    private javax.swing.JTextField tfTypeOfActivities;
    // End of variables declaration//GEN-END:variables
}
